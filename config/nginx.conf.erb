daemon off;
worker_processes 4;

events {
  use epoll;
  accept_mutex on;
  worker_connections 1024;
}

http {
  # Hide nginx version information.
  server_tokens off;

  # Define the MIME types for files.
  include mime.types;
  default_type application/octet-stream;

  # Format to use in log files
  log_format l2met 'measure.nginx.service=$request_time '
                   'user_agent=$http_user_agent '
                   'referer=$http_referer '
                   'request_id=$http_heroku_request_id';

  # Default log file
  # (this is only used when you don't override access_log on a server{} level)
  access_log logs/nginx/access.log l2met;
  error_log logs/nginx/error.log;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  sendfile on;

  # The maximum allowed size of the client request body
  client_max_body_size 20M;


  # Compression

  # Enable Gzip compressed.
  gzip on;

  # Enable compression both for HTTP/1.0 and HTTP/1.1 (required for CloudFront).
  gzip_http_version  1.0;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and cpu usage, offering about
  # 75% reduction for most ascii files (almost identical to level 9).
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied       any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-javascript
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;
  # text/html is always compressed by HttpGzipModule


  upstream app_server {
    server unix:/tmp/nginx.socket fail_timeout=0;
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name _;

    # Timeouts

    # Do not keep connections open longer then necessary to reduce resource usage
    # and deny Slowloris type attacks.

    # Maximum time between packets the client can pause when sending nginx any
    # data.
    client_body_timeout      5s;

    # Maximum time the client has to send the entire header to nginx
    client_header_timeout    5s;

    # Timeout which a single keep-alive client connection will stay open
    keepalive_timeout       75s;

    # Maximum time between packets nginx is allowed to pause when sending the
    # client data
    send_timeout             5s;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }
}
